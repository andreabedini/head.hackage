diff --git a/src/Data/Validity.hs b/src/Data/Validity.hs
index 6002e6c..f745dcd 100644
--- a/src/Data/Validity.hs
+++ b/src/Data/Validity.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 {-# LANGUAGE DefaultSignatures #-}
 {-# LANGUAGE DeriveGeneric #-}
 {-# LANGUAGE FlexibleContexts #-}
@@ -435,27 +436,39 @@ instance Validity Int where
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Int8 where
+#if !MIN_VERSION_base(4,16,0)
   validate (I8# i#) =
     mconcat
       [ declare "The contained integer is smaller than 2^7 = 128" $ isTrue# (i# <=# 127#),
         declare "The contained integer is greater than or equal to -2^7 = -128" $ isTrue# (i# >=# -128#)
       ]
+#else
+  validate = trivialValidation
+#endif
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Int16 where
+#if !MIN_VERSION_base(4,16,0)
   validate (I16# i#) =
     mconcat
       [ declare "The contained integer is smaller than 2^15 = 32768" $ isTrue# (i# <=# 32767#),
         declare "The contained integer is greater than or equal to -2^15 = -32768" $ isTrue# (i# >=# -32768#)
       ]
+#else
+  validate = trivialValidation
+#endif
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Int32 where
+#if !MIN_VERSION_base(4,16,0)
   validate (I32# i#) =
     mconcat
       [ declare "The contained integer is smaller than 2^31 = 2147483648" $ isTrue# (i# <=# 2147483647#),
         declare "The contained integer is greater than or equal to -2^31 = -2147483648" $ isTrue# (i# >=# -2147483648#)
       ]
+#else
+  validate = trivialValidation
+#endif
 
 -- | Trivially valid
 instance Validity Int64 where
@@ -467,18 +480,30 @@ instance Validity Word where
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Word8 where
+#if !MIN_VERSION_base(4,16,0)
   validate (W8# w#) =
     declare "The contained integer is smaller than 2^8 = 256" $ isTrue# (w# `leWord#` 255##)
+#else
+  validate = trivialValidation
+#endif
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Word16 where
+#if !MIN_VERSION_base(4,16,0)
   validate (W16# w#) =
     declare "The contained integer is smaller than 2^16 = 65536" $ isTrue# (w# `leWord#` 65535##)
+#else
+  validate = trivialValidation
+#endif
 
 -- | NOT trivially valid on GHC because small number types are represented using a 64bit structure underneath.
 instance Validity Word32 where
+#if !MIN_VERSION_base(4,16,0)
   validate (W32# w#) =
     declare "The contained integer is smaller than 2^32 = 4294967296" $ isTrue# (w# `leWord#` 4294967295##)
+#else
+  validate = trivialValidation
+#endif
 
 -- | Trivially valid
 instance Validity Word64 where
